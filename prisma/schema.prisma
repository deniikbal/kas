generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model kas_payments {
  id          Int         @id @default(autoincrement())
  studentId   Int
  kasPeriodId Int
  amount      Int
  paidAt      DateTime    @default(now())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime
  kas_periods kas_periods @relation(fields: [kasPeriodId], references: [id], onDelete: Cascade)
  students    students    @relation(fields: [studentId], references: [id], onDelete: Cascade)

  @@unique([studentId, kasPeriodId])
}

model kas_periods {
  id           Int            @id @default(autoincrement())
  weekNo       Int
  startsAt     DateTime
  endsAt       DateTime
  nominal      Int
  createdAt    DateTime       @default(now())
  updatedAt    DateTime
  kas_payments kas_payments[]
}

model students {
  id           Int            @id @default(autoincrement())
  nis          String         @unique
  name         String
  kelas        String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime
  kas_payments kas_payments[]
  transactions transactions[]
}

model transactions {
  id          Int       @id @default(autoincrement())
  kind        String
  category    String
  description String?
  amount      Int
  studentId   Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime
  students    students? @relation(fields: [studentId], references: [id])
}

model users {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      String    @default("admin")
  avatar    String?
  lastLogin DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime
}
